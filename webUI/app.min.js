!function(){"use strict";angular.module("app",["ui.bootstrap","ui.router","app.common","app.providers","app.directives","app.services","app.home","app.rankings"])}(),function(){"use strict";angular.module("app.home",[])}(),function(){"use strict";angular.module("app.rankings",[])}(),function(){"use strict";angular.module("app.common",[])}(),function(){"use strict";angular.module("app.directives",[])}(),function(){"use strict";angular.module("app.filters",[])}(),function(){"use strict";angular.module("app.providers",[])}(),function(){"use strict";angular.module("app.services",[])}(),function(){"use strict";function e(e,a,n){e.debugEnabled(!0),n.otherwise("/home"),a.state("app",{"abstract":!0,views:{nav:{templateUrl:"/app/shared/app_layout/navTemplate.html",controller:"NavController",controllerAs:"vm"},"":{templateUrl:"/app/shared/app_layout/contentTemplate.html",controller:"ContentController",controllerAs:"vm"},sidebar:{templateUrl:"/app/shared/app_layout/sidebarTemplate.html",controller:"SidebarController",controllerAs:"vm"},footer:{templateUrl:"/app/shared/app_layout/footerTemplate.html",controller:"FooterController",controllerAs:"vm"}}})}var a=angular.module("app");a.config(e),e.$inject=["$logProvider","$stateProvider","$urlRouterProvider"],a.run(["$rootScope",function(e){e.$on("$stateChangeSuccess",function(a,n){e.title=n.title,e.bodyCss=n.bodyCss})}])}(),function(){"use strict";function e(e){e.state("app.home",{url:"/home",templateUrl:"/app/components/home/homeView.html",controller:"HomeController",controllerAs:"vm",title:"Home",bodyCss:"home"})}angular.module("app.home").config(e),e.$inject=["$stateProvider"]}(),function(){"use strict";function e(){}angular.module("app.rankings").config(e),e.$inject=[]}(),function(){"use strict";function e(){}angular.module("app.common").config(e),e.$inject=[]}(),function(){"use strict";function e(){}angular.module("app.directives").config(e),e.$inject=[]}(),function(){"use strict";function e(){}angular.module("app.filters").config(e),e.$inject=[]}(),function(){"use strict";function e(){}angular.module("app.providers").config(e),e.$inject=[]}(),function(){"use strict";function e(){}angular.module("app.services").config(e),e.$inject=[]}(),function(){"use strict";function e(a,n,t,r){function o(){a.debug(e,o,"Initializing...")}var i=this;i.globalEnum=r,o()}angular.module("app.home").controller("HomeController",e),e.$inject=["logger","iconProvider","wowService","globalEnum","cache"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Initializing...")}n()}angular.module("app").controller("ContentController",e),e.$inject=["logger"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Initializing...")}n()}angular.module("app").controller("FooterController",e),e.$inject=["logger"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Initializing...")}n()}angular.module("app").controller("NavController",e),e.$inject=["logger"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Initializing...")}n()}angular.module("app").controller("SidebarController",e),e.$inject=["logger"]}(),function(){"use strict";function e(){function e(e,n,t){if(e=a+e,n)for(var r,o=Object.keys(n),i=0;i<o.length;i++)r=o[i],e=e.replace("/:"+r,"/"+n[r]);if(t)for(var l,s,c=Object.keys(t),u=0;u<c.length;u++)l=c[u],s=0===u?"?":"&",e=e+s+l+"="+t[l];return e}var a="/api",n="/wow",t=n+"/data";return{wow:{data:{classes:t+"/character/classes",races:t+"/character/races",talents:t+"/talents"},pvp:{leaderboard:"/wow/leaderboard/:bracket"}},route:e}}angular.module("app.common").factory("api",e),e.$inject=[]}(),function(){"use strict";function e(a,n){function t(a,r){return a?(r.timestamp=moment().toISOString(),localStorage.setItem(a,JSON.stringify(r)),n.debug(e,t,'Storing object with key: "'+a+'".'),void 0):(n.error(e,t,"Key not provided."),void 0)}function r(t){if(!t)return n.error(e,r,"Key not provided."),void 0;var o=JSON.parse(localStorage.getItem(t));if(!o)return null;var i=moment(o.timestamp),l=moment();if(l.diff(i,"minutes")>=a.CACHE_MINUTES)return localStorage.removeItem(t),null;var s=_.clone(o,!0);return delete s.timestamp,s}return{store:t,load:r}}angular.module("app.common").factory("cache",e),e.$inject=["globalConstants","logger"]}(),function(){"use strict";var e=angular.module("app.common"),a="http://media.blizzard.com/wow/icons",n="http://wow.zamimg.com/images/wow/icons",t={BLIZZ_ICONS_ROOT:a,ZAM_ICONS_ROOT:n,BNET_ROOT_EU:"http://eu.battle.net",BNET_ROOT_US:"http://us.battle.net",CACHE_MINUTES:60};e.constant("globalConstants",t)}(),function(){"use strict";var e=angular.module("app.common");e.constant("globalEnum",{region:{EU:{mask:Math.pow(2,0),enumVal:"eu",display:"EU",displayLong:"Europe"},US:{mask:Math.pow(2,1),enumVal:"us",display:"US",displayLong:"United States"}},gameMode:{PvE:{mask:Math.pow(2,0),enumVal:"pve",display:"PvE"},PvP:{mask:Math.pow(2,1),enumVal:"pvp",display:"PvP"}},faction:{Alliance:{mask:Math.pow(2,0),enumVal:"alliance",display:"Alliance",blizzId:0},Horde:{mask:Math.pow(2,1),enumVal:"horde",display:"Horde",blizzId:1}},gender:{Male:{mask:Math.pow(2,0),enumVal:"male",display:"Male",blizzId:0},Female:{mask:Math.pow(2,1),enumVal:"female",display:"Female",blizzId:1}},race:{Human:{mask:Math.pow(2,0),enumVal:"human",display:"Human",blizzId:1},Orc:{mask:Math.pow(2,1),enumVal:"orc",display:"Orc",blizzId:2},Dwarf:{mask:Math.pow(2,2),enumVal:"dwarf",display:"Dwarf",blizzId:3},NightElf:{mask:Math.pow(2,3),enumVal:"nightelf",display:"Night Elf",blizzId:4},Undead:{mask:Math.pow(2,4),enumVal:"undead",display:"Undead",blizzId:5},Tauren:{mask:Math.pow(2,5),enumVal:"tauren",display:"Tauren",blizzId:6},Gnome:{mask:Math.pow(2,6),enumVal:"gnome",display:"Gnome",blizzId:7},Troll:{mask:Math.pow(2,7),enumVal:"troll",display:"Troll",blizzId:8},Goblin:{mask:Math.pow(2,8),enumVal:"goblin",display:"Goblin",blizzId:9},BloodElf:{mask:Math.pow(2,9),enumVal:"bloodelf",display:"Blood Elf",blizzId:10},Draenei:{mask:Math.pow(2,10),enumVal:"draenei",display:"Draenei",blizzId:11},Worgen:{mask:Math.pow(2,11),enumVal:"worgen",display:"Worgen",blizzId:22},PandarenNeutral:{mask:Math.pow(2,12),enumVal:"pandarenneutral",display:"Pandaren Neutral",blizzId:24},PandarenAlliance:{mask:Math.pow(2,13),enumVal:"pandarenalliance",display:"Pandaren Alliance",blizzId:25},PandarenHorde:{mask:Math.pow(2,14),enumVal:"pandarenhorde",display:"Pandaren Horde",blizzId:26}},"class":{Warrior:{mask:Math.pow(2,0),enumVal:"warrior",display:"Warrior",blizzId:1,specs:[71,72,73]},Paladin:{mask:Math.pow(2,1),enumVal:"paladin",display:"Paladin",blizzId:2,specs:[65,66,70]},Hunter:{mask:Math.pow(2,2),enumVal:"hunter",display:"Hunter",blizzId:3,specs:[253,254,255]},Rogue:{mask:Math.pow(2,3),enumVal:"rogue",display:"Rogue",blizzId:4,specs:[259,260,261]},Priest:{mask:Math.pow(2,4),enumVal:"priest",display:"Priest",blizzId:5,specs:[256,257,258]},DeathKnight:{mask:Math.pow(2,5),enumVal:"deathknight",display:"Death Knight",blizzId:6,specs:[250,251,252]},Shaman:{mask:Math.pow(2,6),enumVal:"shaman",display:"Shaman",blizzId:7,specs:[262,263,264]},Mage:{mask:Math.pow(2,7),enumVal:"mage",display:"Mage",blizzId:8,specs:[62,63,64]},Warlock:{mask:Math.pow(2,8),enumVal:"warlock",display:"Warlock",blizzId:9,specs:[265,266,267]},Monk:{mask:Math.pow(2,9),enumVal:"monk",display:"Monk",blizzId:10,specs:[268,269,270]},Druid:{mask:Math.pow(2,10),enumVal:"druid",display:"Druid",blizzId:11,specs:[102,103,104,105]}},bracket:{TwoVsTwo:{mask:Math.pow(2,0),enumVal:"2v2",display:"2v2",displayLong:"Arena 2v2"},ThreeVsThree:{mask:Math.pow(2,1),enumVal:"3v3",display:"3v3",displayLong:"Arena 3v3"},FiveVsFive:{mask:Math.pow(2,2),enumVal:"5v5",display:"5v5",displayLong:"Arena 5v5"},Rbg:{mask:Math.pow(2,3),enumVal:"rbg",display:"Rbg",displayLong:"Rated Battlegrounds"}},iconSize:{Small:{mask:Math.pow(2,0),enumVal:"small",display:"Small"},Medium:{mask:Math.pow(2,1),enumVal:"medium",display:"Medium"},Large:{mask:Math.pow(2,2),enumVal:"large",display:"Large"}},rankListType:{Players:{mask:Math.pow(2,0),enumVal:"players",display:"Players"},Specs:{mask:Math.pow(2,1),enumVal:"specs",display:"Specs"},Races:{mask:Math.pow(2,2),enumVal:"races",display:"Races"},Guilds:{mask:Math.pow(2,3),enumVal:"guilds",display:"Guilds"},Achievements:{mask:Math.pow(2,4),enumVal:"achievements",display:"Achievements"},Mounts:{mask:Math.pow(2,5),enumVal:"mounts",display:"Mounts"}}})}(),function(){"use strict";function e(e,a){function n(a,n){return e.BLIZZ_ICONS_ROOT+"/"+l[n.enumVal.toLowerCase()]+"/"+a+s}function t(a,n){return e.ZAM_ICONS_ROOT+"/"+n.enumVal.toLowerCase()+"/"+a+s}function r(e,a){var n="alliance";1===e&&(n="horde");var r="faction_"+n.toLowerCase();return t(r,a)}function o(e,n){var r=_.findKey(a.class,function(a){return e===a.blizzId}),o=a.class[r].enumVal,i="class_"+o.toLowerCase();return t(i,n)}function i(e,n,r){var o=_.findKey(a.race,function(a){return e===a.blizzId}),i=_.findKey(a.gender,function(e){return n===e.blizzId}),l=a.race[o].enumVal,s=a.gender[i].enumVal,c="race_"+l.toLowerCase()+"_"+s;return t(c,r)}var l={small:18,medium:36,large:56},s=".jpg";return{blizzIconLink:n,zamIconLink:t,factionIconLink:r,classIconLink:o,raceIconLink:i}}angular.module("app.providers").factory("iconProvider",e),e.$inject=["globalConstants","globalEnum","logger"]}(),function(){"use strict";function e(e){function a(a,n,t){e.debug(i(a,n,t))}function n(a,n,t){e.error(i(a,n,t))}function t(a,n,t){e.info(i(a,n,t))}function r(a,n,t){e.log(i(a,n,t))}function o(a,n,t){e.warn(i(a,n,t))}function i(e,a,n){return e.name+" -> "+a.name+"(): "+n}return{debug:a,error:n,info:t,log:r,warn:o}}angular.module("app.providers").factory("logger",e),e.$inject=["$log"]}(),function(){"use strict";function e(e){function a(e){return e.promise.success=function(a){return e.promise.then(a,null),e.promise},e.promise.error=function(a){return e.promise.then(null,a),e.promise},e}function n(n,t){var r=e.defer();return t?r.reject(n):r.resolve(n),a(r),r.promise}return{promiseFromObj:n}}angular.module("app.providers").factory("promiseProvider",e),e.$inject=["$q","logger"]}(),function(){"use strict";function e(a,n,t,r,o,i,l,s,c){function u(e){return e===l.region.US?i.BNET_ROOT_US:i.BNET_ROOT_EU}function p(e,n,t){var r=u(n);return t=t||{},t=angular.extend(t,{callback:"angular.callbacks._"+y,jsonp:"JSON_CALLBACK"}),y++,/character/.test(e)&&delete t.callback,a.jsonp(r+e,{params:t})}function d(){var a=t.load(k);return a?(c.debug(e,d,"Retrieving from cache."),r.promiseFromObj(a)):(c.debug(e,d,"Calling service."),p(s.route(s.wow.data.classes)).then(function(e){return t.store(k,e),e}))}function m(){var a=t.load(w);return a?(c.debug(e,m,"Retrieving from cache."),r.promiseFromObj(a)):(c.debug(e,m,"Calling service."),p(s.route(s.wow.data.races)).then(function(e){return t.store(w,e),e}))}function g(){var a=t.load(z);return a?(c.debug(e,g,"Retrieving from cache."),r.promiseFromObj(a)):(c.debug(e,g,"Calling service."),p(s.route(s.wow.data.talents)).then(function(e){return t.store(z,e),e}))}function f(e){var a=n.defer();return d().then(function(n){var t=_.find(n.data.classes,function(a){return e===a.id}),r=t.name.replace(/\s/g,"").toLowerCase(),i="class_"+r;return t.iconLink=function(e){return o.zamIconLink(i,e)},t.cssClass="class-"+r,a.resolve({data:{"class":t}})}),a.promise}function h(e,a){var t=n.defer(),r="male";return 1===a&&(r="female"),m().then(function(a){var n=_.find(a.data.races,function(a){return e===a.id}),i=n.name.replace(/\s/g,"").toLowerCase();"undead"===i&&(i="scourge");var l="race_"+i+"_"+r;return n.iconLink=function(e){return o.zamIconLink(l,e)},t.resolve({data:{race:n}})}),t.promise}function b(e){var a=n.defer(),t=_.find(l.class,function(a){return a.specs.indexOf(e)>=0}),r=t.specs.indexOf(e);return g().then(function(e){var n=e.data[t.blizzId].specs[r];return n.iconLink=function(e){return o.zamIconLink(n.icon,e)},a.resolve({data:{spec:n}})}),a.promise}function v(e,a){return p(s.route(s.wow.pvp.leaderboard,{bracket:e.enumVal}),a)}var y=0,k="classes",w="races",z="talents";return{getClasses:d,getRaces:m,getTalents:g,getClass:f,getRace:h,getSpec:b,getPvpLeaderboard:v}}angular.module("app.services").factory("wowService",e),e.$inject=["$http","$q","cache","promiseProvider","iconProvider","globalConstants","globalEnum","api","logger"]}(),function(){"use strict";function e(a,n){function t(){a.debug(e,t,"Initializing..."),r.regions=_.values(n.region),r.region=r.regions[0],r.brackets=_.values(n.bracket),r.bracket=r.brackets[0],r.filters={visible:!1},r.outputFilters.test="test"}var r=this;t()}angular.module("app.rankings").controller("PvpFiltersController",e),e.$inject=["logger","globalEnum"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Configuring.")}return{restrict:"E",templateUrl:"/app/components/rankings/pvpFilters/pvpFiltersTemplate.html",replace:!0,controller:"PvpFiltersController",controllerAs:"vm",bindToController:!0,scope:{region:"=",bracket:"=",outputFilters:"=filters"},link:n}}angular.module("app.rankings").directive("pvpFilters",e),e.$inject=["logger"]}(),function(){"use strict";function e(a,n,t,r,o){function i(){o.debug(e,i,"Initializing."),c.loadingCount=0,c.headerText=c.bracket.displayLong+" - "+c.region.displayLong,c.sortByOpt={key:null,isAscending:!0},c.pageNumber=1,c.pageSize=c.optionalPageSize,c.pageSize||(c.pageSize=5),c.loadingCount++,n.getPvpLeaderboard(c.bracket,c.region).then(function(e){c.leaderboard=e.data.rows,c.sortBy(c.headers[0].key),c.loadingCount--}),c.loadingCount++,_.delay(function(){a.$apply(function(){c.loadingCount--})},2e3)}function l(){c.pageData=[];var a=1,r=Math.ceil(c.leaderboard.length/c.pageSize);(c.pageNumber<a||c.pageNumber>r)&&(o.warn(e,l,"Invalid page number: "+c.pageNumber+". Clamping to array edge."),c.pageNumber=Math.min(Math.max(c.pageNumber,a),r)),c.startIndex=Math.max((c.pageNumber-1)*c.pageSize,0),c.endIndex=Math.min(c.pageNumber*c.pageSize,c.leaderboard.length);var i=c.leaderboard.slice(c.startIndex,c.endIndex);_.forEach(i,function(e){var a={ranking:e.ranking,name:e.name,realm:e.realmName,factionIconLink:t.factionIconLink(e.factionId,u),factionDisplay:0===e.factionId?"Alliance":"Horde",wins:e.seasonWins,losses:e.seasonLosses,rating:e.rating};c.loadingCount++,n.getClass(e.classId).then(function(e){a.classIconLink=e.data.class.iconLink(u),a.classDisplay=e.data.class.name,a.classCssClass=e.data.class.cssClass,c.loadingCount--}),c.loadingCount++,n.getRace(e.raceId,e.genderId).then(function(e){a.raceIconLink=e.data.race.iconLink(u),a.raceDisplay=e.data.race.name,c.loadingCount--}),c.loadingCount++,n.getSpec(e.specId).then(function(e){a.specIconLink=e.data.spec.iconLink(u),a.specDisplay=e.data.spec.name,c.loadingCount--}),c.pageData.push(a)})}function s(a){c.sortByOpt.isAscending=a===c.sortByOpt.key?!c.sortByOpt.isAscending:!0,c.sortByOpt.key=a,c.leaderboard=_.sortBy(c.leaderboard,"name"),c.leaderboard=_.sortBy(c.leaderboard,c.sortByOpt.key),c.sortByOpt.isAscending||c.leaderboard.reverse(),o.debug(e,s,'Sorting by "'+a+'" ('+c.sortByOpt.isAscending+")."),c.loadPage()}var c=this;c.loadPage=l,c.sortBy=s,c.headers=[{display:"#",key:"ranking"},{display:"Class",key:"classId"},{display:"Spec",key:"specId"},{display:"Race",key:"raceId"},{display:"Player",key:"name",cssClass:"col-md-2"},{display:"Realm",key:"realmName",cssClass:"col-md-2"},{display:"Faction",key:"factionId"},{display:"Wins",key:"seasonWins"},{display:"Losses",key:"seasonLosses"},{display:"Rating",key:"rating"}];var u=r.iconSize.Small;i()}angular.module("app.rankings").controller("PvpRankingsController",e),e.$inject=["$scope","wowService","iconProvider","globalEnum","logger"]}(),function(){"use strict";function e(a){function n(){a.debug(e,n,"Configuring.")}return{restrict:"E",templateUrl:"/app/components/rankings/pvpRankings/pvpRankingsTemplate.html",replace:!0,controller:"PvpRankingsController",controllerAs:"vm",bindToController:!0,scope:{bracket:"=",region:"=",optionalPageSize:"=pageSize"},link:n}}angular.module("app.rankings").directive("pvpRankings",e),e.$inject=["logger"]}();
//# sourceMappingURL=data:application/json;base64,